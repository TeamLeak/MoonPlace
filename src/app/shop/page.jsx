"use client";
import React, { useEffect, useState } from "react";
import { useUser } from "@/hooks/useUser";
import { useLanguage } from "@/context/LanguageContext";
import Link from "next/link";

export default function ShopPageComponent() {
  const { data: user } = useUser();
  const { t } = useLanguage();
  const [selectedPackage, setSelectedPackage] = useState(null);
  const [username, setUsername] = useState('');
  const [usernameError, setUsernameError] = useState('');
  const [isModalOpen, setIsModalOpen] = useState(false);
  const [isLoading, setIsLoading] = useState(false);
  const [isSuccess, setIsSuccess] = useState(false);
  const [mousePosition, setMousePosition] = useState({ x: 0, y: 0 });

  // Coin packages with benefits
  const coinPackages = [
    {
      id: 1,
      coins: 100,
      price: 50,
      bonus: 0,
      popular: false,
      icon: "fas fa-coins",
      features: ["–ë–∞–∑–æ–≤—ã–π –ø–∞–∫–µ—Ç", "–ú–≥–Ω–æ–≤–µ–Ω–Ω–æ–µ –∑–∞—á–∏—Å–ª–µ–Ω–∏–µ"],
    },
    {
      id: 2,
      coins: 250,
      price: 120,
      bonus: 25,
      popular: false,
      icon: "fas fa-gem",
      features: ["+25 –±–æ–Ω—É—Å–Ω—ã—Ö –º–æ–Ω–µ—Ç", "–ë—ã—Å—Ç—Ä–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞"],
    },
    {
      id: 3,
      coins: 500,
      price: 230,
      bonus: 100,
      popular: true,
      icon: "fas fa-crown",
      features: ["+100 –±–æ–Ω—É—Å–Ω—ã—Ö –º–æ–Ω–µ—Ç", "VIP-–ø–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7", "–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–π –∑–Ω–∞—á–æ–∫ –≤ —á–∞—Ç–µ"],
    },
    {
      id: 4,
      coins: 1000,
      price: 450,
      bonus: 250,
      popular: false,
      icon: "fas fa-trophy",
      features: ["+250 –±–æ–Ω—É—Å–Ω—ã—Ö –º–æ–Ω–µ—Ç", "–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞", "–î–æ—Å—Ç—É–ø –∫ –±–µ—Ç–∞-—Ç–µ—Å—Ç–∞–º"],
    },
    {
      id: 5,
      coins: 2500,
      price: 1000,
      bonus: 750,
      popular: false,
      icon: "fas fa-star",
      features: ["+750 –±–æ–Ω—É—Å–Ω—ã—Ö –º–æ–Ω–µ—Ç", "–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä", "–†–∞–Ω–Ω–∏–π –¥–æ—Å—Ç—É–ø –∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º"],
    },
    {
      id: 6,
      coins: 5000,
      price: 1800,
      bonus: 2000,
      popular: false,
      icon: "fas fa-diamond",
      features: ["+2000 –±–æ–Ω—É—Å–Ω—ã—Ö –º–æ–Ω–µ—Ç", "–í—Å–µ –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –ø—Ä–∏–≤–∏–ª–µ–≥–∏–∏", "–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–π —Å–∫–∏–Ω"],
    },
  ];

  useEffect(() => {
    const handleMouseMove = (e) => {
      setMousePosition({ x: e.clientX, y: e.clientY });
    };

    window.addEventListener("mousemove", handleMouseMove);
    return () => window.removeEventListener("mousemove", handleMouseMove);
  }, []);

  const validateUsername = (name) => {
    if (!name.trim()) {
      setUsernameError('–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
      return false;
    }
    if (name.length < 3 || name.length > 16) {
      setUsernameError('–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç 3 –¥–æ 16 —Å–∏–º–≤–æ–ª–æ–≤');
      return false;
    }
    if (!/^[a-zA-Z0-9_]+$/.test(name)) {
      setUsernameError('–ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –ª–∞—Ç–∏–Ω—Å–∫–∏–µ –±—É–∫–≤—ã, —Ü–∏—Ñ—Ä—ã –∏ –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏–µ');
      return false;
    }
    setUsernameError('');
    return true;
  };

  const handlePurchase = (pkg) => {
    setSelectedPackage(pkg);
    setUsername('');
    setUsernameError('');
    setIsModalOpen(true);
  };

  const handleConfirmPurchase = () => {
    if (!validateUsername(username)) return;
    
    // Here you would typically process the payment
    console.log(`Processing purchase for ${username}:`, selectedPackage);
    
    // Show success message and close modal after a delay
    setIsLoading(true);
    setTimeout(() => {
      setIsLoading(false);
      setIsSuccess(true);
      setTimeout(() => {
        setIsModalOpen(false);
        setIsSuccess(false);
      }, 2000);
    }, 1500);
  };

  const totalCoins = (pkg) => pkg.coins + pkg.bonus;

  return (
    <div className="min-h-screen bg-gradient-to-b from-[#0f051d] to-[#1a0b2e] text-white overflow-x-hidden">
      <div 
        className="fixed inset-0 pointer-events-none"
        style={{
          background: `radial-gradient(800px at ${mousePosition.x}px ${mousePosition.y}px, rgba(168, 85, 247, 0.1), transparent 60%)`,
          zIndex: -1,
        }}
      />
      
      {/* Hero Section */}
      <div className="relative pt-24 pb-16 px-4 sm:px-6 lg:pt-32 lg:pb-24 lg:px-8">
        <div className="relative max-w-7xl mx-auto text-center">
          <h1 className="text-4xl md:text-6xl font-extrabold tracking-tight">
            <span className="block bg-gradient-to-r from-purple-400 via-pink-500 to-rose-500 bg-clip-text text-transparent">
              –ú–∞–≥–∞–∑–∏–Ω –º–æ–Ω–µ—Ç
            </span>
          </h1>
          <p className="mt-6 max-w-2xl mx-auto text-xl text-gray-300">
            –ü—Ä–∏–æ–±—Ä–µ—Ç–∞–π—Ç–µ –º–æ–Ω–µ—Ç—ã –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –∏ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
          </p>
          
          <div className="mt-10 grid grid-cols-1 gap-5 sm:grid-cols-3 max-w-3xl mx-auto">
            {[
              { icon: '‚ö°', text: '–ú–≥–Ω–æ–≤–µ–Ω–Ω–æ–µ –∑–∞—á–∏—Å–ª–µ–Ω–∏–µ' },
              { icon: 'üõ°Ô∏è', text: '–ë–µ–∑–æ–ø–∞—Å–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∏' },
              { icon: 'üéÅ', text: '–ë–æ–Ω—É—Å—ã –∑–∞ –ø–æ–∫—É–ø–∫–∏' },
            ].map((item, index) => (
              <div key={index} className="flex items-center justify-center space-x-2 bg-white/5 backdrop-blur-sm rounded-lg p-4">
                <span className="text-2xl">{item.icon}</span>
                <span className="text-sm font-medium">{item.text}</span>
              </div>
            ))}
          </div>
        </div>
      </div>

      {/* Packages Section */}
      <div className="relative py-12 px-4 sm:px-6 lg:py-16 lg:px-8 max-w-7xl mx-auto">
        <div className="text-center mb-12">
          <h2 className="text-3xl font-extrabold text-white sm:text-4xl">
            <span className="block">–í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ–π –ø–∞–∫–µ—Ç</span>
            <span className="block text-transparent bg-clip-text bg-gradient-to-r from-purple-400 to-pink-600">
              –∏ –ø–æ–ª—É—á–∏—Ç–µ –±–æ–Ω—É—Å—ã
            </span>
          </h2>
        </div>

        {/* Coin Packages Grid */}
        <div className="grid gap-8 mt-12 max-w-7xl mx-auto sm:grid-cols-2 lg:grid-cols-3">
          {coinPackages.map((pkg) => (
            <div 
              key={pkg.id}
              className={`relative rounded-2xl p-8 transition-all duration-300 transform hover:scale-105 ${
                pkg.popular 
                  ? 'bg-gradient-to-br from-purple-900/50 to-pink-900/50 border-2 border-pink-500/50 shadow-lg shadow-pink-500/20' 
                  : 'bg-white/5 border border-white/10 hover:border-pink-500/30'
              }`}
            >
              {pkg.popular && (
                <div className="absolute -top-4 left-1/2 transform -translate-x-1/2 bg-gradient-to-r from-pink-500 to-purple-600 text-white text-xs font-bold px-4 py-1 rounded-full">
                  –ü–æ–ø—É–ª—è—Ä–Ω—ã–π –≤—ã–±–æ—Ä
                </div>
              )}
              
              <div className="text-center">
                <div className="text-4xl mb-4 text-pink-400">
                  <i className={pkg.icon}></i>
                </div>
                <h3 className="text-2xl font-bold mb-2">{pkg.coins} –º–æ–Ω–µ—Ç</h3>
                {pkg.bonus > 0 && (
                  <p className="text-green-400 text-sm mb-4">+{pkg.bonus} –±–æ–Ω—É—Å–Ω—ã—Ö –º–æ–Ω–µ—Ç</p>
                )}
                
                <div className="my-6">
                  <span className="text-4xl font-bold">{pkg.price} ‚ÇΩ</span>
                  {pkg.bonus > 0 && (
                    <span className="ml-2 text-sm text-gray-400 line-through">
                      {Math.ceil((pkg.coins + pkg.bonus) / 2)} ‚ÇΩ
                    </span>
                  )}
                </div>
                
                <ul className="space-y-3 mb-8 text-left">
                  {pkg.features.map((feature, idx) => (
                    <li key={idx} className="flex items-start">
                      <svg className="h-5 w-5 text-green-400 mr-2 mt-0.5 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
                      </svg>
                      <span className="text-gray-300">{feature}</span>
                    </li>
                  ))}
                </ul>
                
                <button
                  onClick={() => handlePurchase(pkg)}
                  className={`w-full py-3 px-6 rounded-lg font-medium transition-all duration-200 ${
                    pkg.popular 
                      ? 'bg-gradient-to-r from-pink-500 to-purple-600 hover:from-pink-600 hover:to-purple-700 text-white shadow-lg shadow-pink-500/30'
                      : 'bg-white/10 hover:bg-white/20 text-white border border-white/10 hover:border-pink-500/30'
                  }`}
                >
                  –ö—É–ø–∏—Ç—å —Å–µ–π—á–∞—Å
                </button>
              </div>
            </div>
          ))}
        </div>
        
        {/* FAQ Section */}
        <div className="max-w-4xl mx-auto px-4 py-16">
          <h2 className="text-3xl font-bold text-center mb-12">
            <span className="bg-gradient-to-r from-purple-400 to-pink-500 bg-clip-text text-transparent">
              –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã
            </span>
          </h2>
          
          <div className="space-y-4">
            {[
              {
                question: "–ö–∞–∫ –±—ã—Å—Ç—Ä–æ –∑–∞—á–∏—Å–ª—è—é—Ç—Å—è –º–æ–Ω–µ—Ç—ã?",
                answer: "–ú–æ–Ω–µ—Ç—ã –∑–∞—á–∏—Å–ª—è—é—Ç—Å—è –º–≥–Ω–æ–≤–µ–Ω–Ω–æ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã. –í —Ä–µ–¥–∫–∏—Ö —Å–ª—É—á–∞—è—Ö —ç—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –¥–æ 5 –º–∏–Ω—É—Ç."
              },
              {
                question: "–ö–∞–∫–∏–µ —Å–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã –¥–æ—Å—Ç—É–ø–Ω—ã?",
                answer: "–ú—ã –ø—Ä–∏–Ω–∏–º–∞–µ–º –≤—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –±–∞–Ω–∫–æ–≤—Å–∫–∏–µ –∫–∞—Ä—Ç—ã, –∞ —Ç–∞–∫–∂–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–µ –∫–æ—à–µ–ª—å–∫–∏."
              },
              {
                question: "–ú–æ–∂–Ω–æ –ª–∏ –≤–µ—Ä–Ω—É—Ç—å –º–æ–Ω–µ—Ç—ã?",
                answer: "–í–∏—Ä—Ç—É–∞–ª—å–Ω—ã–µ –≤–∞–ª—é—Ç—ã –Ω–µ –ø–æ–¥–ª–µ–∂–∞—Ç –≤–æ–∑–≤—Ä–∞—Ç—É —Å–æ–≥–ª–∞—Å–Ω–æ –Ω–∞—à–∏–º —É—Å–ª–æ–≤–∏—è–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è."
              },
              {
                question: "–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–æ–Ω–µ—Ç—ã –≤ –∏–≥—Ä–µ?",
                answer: "–ü–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏ –º–æ–Ω–µ—Ç—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ—è–≤—è—Ç—Å—è –Ω–∞ –≤–∞—à–µ–º –∏–≥—Ä–æ–≤–æ–º –∞–∫–∫–∞—É–Ω—Ç–µ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∏—Ö –≤ –∏–≥—Ä–æ–≤–æ–º –º–∞–≥–∞–∑–∏–Ω–µ."
              }
            ].map((item, index) => (
              <div key={index} className="bg-white/5 rounded-xl p-6">
                <h3 className="text-lg font-medium text-white mb-2">{item.question}</h3>
                <p className="text-gray-300">{item.answer}</p>
              </div>
            ))}
          </div>
        </div>
        
        {/* CTA Section */}
        <div className="bg-gradient-to-r from-purple-900/30 to-pink-900/30 rounded-2xl p-8 max-w-4xl mx-auto my-16 text-center">
          <h2 className="text-3xl font-bold mb-4">–ì–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å?</h2>
          <p className="text-xl text-gray-300 mb-8 max-w-2xl mx-auto">
            –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ —Ç—ã—Å—è—á–∞–º –∏–≥—Ä–æ–∫–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ —É–ª—É—á—à–∏–ª–∏ —Å–≤–æ–π –∏–≥—Ä–æ–≤–æ–π –æ–ø—ã—Ç —Å –Ω–∞—à–∏–º–∏ –º–æ–Ω–µ—Ç–∞–º–∏
          </p>
          <div className="flex flex-col sm:flex-row gap-4 justify-center">
            <Link 
              href="#" 
              className="bg-gradient-to-r from-pink-500 to-purple-600 hover:from-pink-600 hover:to-purple-700 text-white font-medium py-3 px-8 rounded-lg transition-all duration-200 transform hover:scale-105"
            >
              –í—ã–±—Ä–∞—Ç—å –ø–∞–∫–µ—Ç
            </Link>
            <Link 
              href="/faq" 
              className="bg-white/10 hover:bg-white/20 text-white font-medium py-3 px-8 rounded-lg border border-white/10 hover:border-pink-500/30 transition-all duration-200"
            >
              –£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ
            </Link>
          </div>
        </div>
      </div>

      {/* Purchase Modal */}
      {isModalOpen && (
        <div className="fixed inset-0 bg-black bg-opacity-70 flex items-center justify-center z-50 p-4">
          <div className="bg-[#1a0b2e] rounded-2xl p-8 w-full max-w-md relative">
            <button
              onClick={() => setIsModalOpen(false)}
              className="absolute top-4 right-4 text-gray-400 hover:text-white"
            >
              <svg className="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
              </svg>
            </button>
            
            {isLoading ? (
              <div className="text-center py-8">
                <div className="animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-pink-500 mx-auto mb-4"></div>
                <p className="text-gray-300">–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–ø–ª–∞—Ç—ã...</p>
              </div>
            ) : isSuccess ? (
              <div className="text-center py-8">
                <div className="w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4">
                  <svg className="w-10 h-10 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
                  </svg>
                </div>
                <h3 className="text-2xl font-bold mb-2">–£—Å–ø–µ—à–Ω–æ!</h3>
                <p className="text-gray-300">–ú–æ–Ω–µ—Ç—ã –∑–∞—á–∏—Å–ª–µ–Ω—ã –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç {username}</p>
              </div>
            ) : (
              <>
                <h2 className="text-2xl font-bold mb-6 text-center">–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–∫—É–ø–∫–∏</h2>
                <div className="space-y-6">
                  <div className="bg-[#2d1b4b]/50 rounded-xl p-4">
                    <div className="flex justify-between items-center mb-2">
                      <span className="text-gray-400">–ü–∞–∫–µ—Ç:</span>
                      <span className="font-medium">{selectedPackage?.coins} –º–æ–Ω–µ—Ç</span>
                    </div>
                    {selectedPackage?.bonus > 0 && (
                      <div className="flex justify-between items-center text-green-400 text-sm">
                        <span>–ë–æ–Ω—É—Å:</span>
                        <span>+{selectedPackage?.bonus} –º–æ–Ω–µ—Ç</span>
                      </div>
                    )}
                    <div className="flex justify-between items-center mt-4 pt-4 border-t border-white/10">
                      <span className="font-medium">–ò—Ç–æ–≥–æ:</span>
                      <span className="text-xl font-bold text-pink-400">{selectedPackage?.price} ‚ÇΩ</span>
                    </div>
                  </div>

                  <div className="space-y-4">
                    <div>
                      <label className="block text-sm font-medium text-gray-300 mb-1">
                        –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
                        <span className="text-red-500 ml-1">*</span>
                      </label>
                      <input
                        type="text"
                        value={username}
                        onChange={(e) => {
                          setUsername(e.target.value);
                          if (usernameError) validateUsername(e.target.value);
                        }}
                        placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–∏–∫"
                        className={`w-full bg-[#2d1b4b]/50 border ${
                          usernameError ? 'border-red-500' : 'border-white/10'
                        } rounded-lg px-4 py-3 focus:outline-none focus:ring-2 focus:ring-pink-500`}
                        autoComplete="off"
                        spellCheck="false"
                      />
                      {usernameError && (
                        <p className="mt-1 text-sm text-red-500">{usernameError}</p>
                      )}
                      <p className="mt-1 text-xs text-gray-400">
                        –£–∫–∞–∂–∏—Ç–µ –Ω–∏–∫, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –±—É–¥—É—Ç –∑–∞—á–∏—Å–ª–µ–Ω—ã –º–æ–Ω–µ—Ç—ã
                      </p>
                    </div>

                    <button
                      onClick={handleConfirmPurchase}
                      disabled={!username.trim() || !!usernameError}
                      className={`w-full ${
                        !username.trim() || usernameError
                          ? 'bg-gray-600 cursor-not-allowed'
                          : 'bg-gradient-to-r from-pink-500 to-purple-600 hover:from-pink-600 hover:to-purple-700'
                      } text-white font-medium py-3 px-6 rounded-lg transition-all duration-200`}
                    >
                      –û–ø–ª–∞—Ç–∏—Ç—å {selectedPackage?.price} ‚ÇΩ
                    </button>
                    
                    <p className="text-xs text-center text-gray-400 mt-3">
                      –ù–∞–∂–∏–º–∞—è –∫–Ω–æ–ø–∫—É, –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å –Ω–∞—à–∏–º–∏ —É—Å–ª–æ–≤–∏—è–º–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
                    </p>
                  </div>
                </div>
              </>
            )}
          </div>
        </div>
      )}

      <style jsx global>{`
        @keyframes pulse {
          0%, 100% { opacity: 1; }
          50% { opacity: 0.5; }
        }
        
        .animate-pulse {
          animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
        }
      `}</style>
    </div>
  );
}
